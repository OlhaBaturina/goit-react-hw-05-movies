{"version":3,"sources":["servises/useFetch.js","Components/TrendsMovie/TrendsMovie.module.css","Components/TrendsMovie/TrendsMovie.js","views/HomePage.js"],"names":["baseURL","API_KEY","fetchAPI","getFilmBySearch","searchQuery","axios","get","then","res","data","results","getCast","filmId","cast","getDaysTrends","getMoviesInfo","getReviews","module","exports","TrendsMovie","useState","movies","setMovies","location","useLocation","status","setStatus","useEffect","r","catch","error","className","s","Container","header","filmsList","map","movie","filmLink","to","pathname","string","title","name","id","slug","lower","state","from","src","alt","width","HomePage"],"mappings":"yIAAA,uDAEMA,EAAU,gCACVC,EAAU,mCAkCHC,EAAW,CACpBC,gBA3BoB,SAAAC,GACpB,OAAOC,IACFC,IADE,UAEIN,EAFJ,gCAEmCC,EAFnC,kBAEoDG,EAFpD,gCAIFG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,YAuB1BC,QAdY,SAAAC,GACZ,OAAOP,IACFC,IADE,UACKN,EADL,iBACqBY,EADrB,4BAC+CX,IACjDM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKI,SAY1BC,cAnCkB,WAClB,OAAOT,IACFC,IADE,UACKN,EADL,qCACyCC,IAC3CM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,YAiC1BK,cAtBkB,SAAAH,GAClB,OAAOP,IACFC,IADE,UACKN,EADL,iBACqBY,EADrB,oBACuCX,IACzCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAoBrBO,WAXe,SAAAJ,GACf,OAAOP,IACFC,IADE,UACKN,EADL,iBACqBY,EADrB,4BAC+CX,IACjDM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,c,mBCjC9BO,EAAOC,QAAU,CAAC,UAAY,+BAA+B,OAAS,4BAA4B,cAAc,iCAAiC,SAAW,gC,kICQ7I,SAASC,IACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWC,cACjB,EAA4BJ,mBAAS,WAArC,mBAAOK,EAAP,KAAeC,EAAf,KAaA,OAXAC,qBAAU,WACND,EAAU,WACVxB,IACKY,gBACAP,MAAK,SAAAqB,GACFN,EAAUM,GACVF,EAAU,cAEbG,OAAM,SAAAC,GAAK,OAAIA,GAASJ,EAAU,iBACxC,IAGC,sBAAKK,UAAWC,IAAEC,UAAlB,UACI,oBAAIF,UAAWC,IAAEE,OAAjB,4BACa,YAAXT,GACE,oBAAIM,UAAWC,IAAEG,UAAjB,SACKd,EAAOe,KAAI,SAAAC,GAAK,OACb,oBAAIN,UAAWC,IAAEM,SAAjB,SACI,cAAC,IAAD,CACIC,GAAI,CACAC,SAAS,WAAD,QA3B3BC,EA2BiD,GAAD,OACtBJ,EAAMK,OAASL,EAAMM,KADC,YAErBN,EAAMO,IA7BvBC,IAAKJ,EAAQ,CAAEK,OAAO,MAgCbC,MAAO,CAAEC,KAAMzB,IAPvB,SAUKc,EAAMK,OAASL,EAAMM,QAXEN,EAAMO,IAxB7C,IAAAH,QAyCW,YAAXhB,GAAwB,cAAC,IAAD,KACb,aAAXA,GACG,gCACI,sDACA,qBACIwB,IAAI,4DACJC,IAAI,iBACJC,MAAM,cCnDnBC,UAFE,kBAAM,cAACjC,EAAD","file":"static/js/7.ed38df2b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '2b2a12748231526069949d7d6477582b';\r\n\r\nconst getDaysTrends = () => {\r\n    return axios\r\n        .get(`${baseURL}trending/all/week?api_key=${API_KEY}`)\r\n        .then(res => res.data.results);\r\n};\r\n\r\nconst getFilmBySearch = searchQuery => {\r\n    return axios\r\n        .get(\r\n            `${baseURL}search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&include_adult=false`,\r\n        )\r\n        .then(res => res.data.results);\r\n};\r\n\r\nconst getMoviesInfo = filmId => {\r\n    return axios\r\n        .get(`${baseURL}movie/${filmId}?api_key=${API_KEY}`)\r\n        .then(res => res.data);\r\n};\r\n\r\nconst getCast = filmId => {\r\n    return axios\r\n        .get(`${baseURL}movie/${filmId}/credits?api_key=${API_KEY}`)\r\n        .then(res => res.data.cast);\r\n};\r\n\r\nconst getReviews = filmId => {\r\n    return axios\r\n        .get(`${baseURL}movie/${filmId}/reviews?api_key=${API_KEY}`)\r\n        .then(res => res.data.results);\r\n};\r\n\r\nexport const fetchAPI = {\r\n    getFilmBySearch,\r\n    getCast,\r\n    getDaysTrends,\r\n    getMoviesInfo,\r\n    getReviews,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TrendsMovie_Container__QJDl2\",\"header\":\"TrendsMovie_header__3gHnf\",\"text-shadow\":\"TrendsMovie_text-shadow__1XWVv\",\"filmLink\":\"TrendsMovie_filmLink__1TDbh\"};","import s from './TrendsMovie.module.css';\nimport { useState, useEffect } from 'react';\nimport { fetchAPI } from '../../servises/useFetch';\nimport { Link, useLocation } from 'react-router-dom';\nimport CustomLoader from '../Loader/Loader';\nimport slug from 'slug';\n\nconst makeSlug = string => slug(string, { lower: true });\n\nexport default function TrendsMovie() {\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n    const [status, setStatus] = useState('pending');\n\n    useEffect(() => {\n        setStatus('loading');\n        fetchAPI\n            .getDaysTrends()\n            .then(r => {\n                setMovies(r);\n                setStatus('pending');\n            })\n            .catch(error => error && setStatus('rejected'));\n    }, []);\n\n    return (\n        <div className={s.Container}>\n            <h1 className={s.header}>Trending today</h1>\n            {(status === 'pending' && (\n                <ul className={s.filmsList}>\n                    {movies.map(movie => (\n                        <li className={s.filmLink} key={movie.id}>\n                            <Link\n                                to={{\n                                    pathname: `/movies/${makeSlug(\n                                        `${movie.title || movie.name} ${\n                                            movie.id\n                                        }`,\n                                    )}`,\n                                    state: { from: location },\n                                }}\n                            >\n                                {movie.title || movie.name}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            )) ||\n                (status === 'loading' && <CustomLoader />) ||\n                (status === 'rejected' && (\n                    <div>\n                        <h1>Something went wrong</h1>\n                        <img\n                            src=\"https://mtdata.ru/u8/photo39C2/20569542232-0/original.jpg\"\n                            alt=\"Page not found\"\n                            width=\"360\"\n                        />\n                    </div>\n                ))}\n        </div>\n    );\n}\n","import TrendsMovie from '../Components/TrendsMovie/TrendsMovie';\r\n\r\nconst HomePage = () => <TrendsMovie />;\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}